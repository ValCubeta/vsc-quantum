[
	{
		"name": "if",
		"is": "keyword",
		"description": "Executes the code if the condition is truthy",
		"documentation": [
			"if user.age >= 18:",
			"\tprint('Access granted')"
		]
	},
	{
		"name": "else",
		"is": "keyword",
		"description": "Executes the code if the previous conditions failed",
		"documentation": [
			"if user.age >= 18:",
			"\tprint('Access granted')",
			"else:",
			"\tprint('Access denied')"
		]
	},
	{
		"name": "or",
		"is": "keyword",
		"description": "Evaluates the code at the right if at the the left is false. Works as JavaScript's `||` and `else if`",
		"documentation": [
			"if user.age >= 18 or user.hasSpecialAccess:",
			"\tprint('Access granted')",
			"else:",
			"\tprint('Access denied')",
			"",
			"if message == 'hello':",
			"\tprint('Hello!')",
			"or message == 'bye':",
			"\tprint('Good bye!')",
			"else:",
			"\tprint('I did not understand :(')"
		]
	},
	{
		"name": "switch",
		"is": "keyword",
		"description": "-",
		"documentation": [
		  "print(",
			"\tswitch message.to_lower!:",
			"\t\tis 'hello': 'Hello!'",
			"\t\tis 'bye':   'Goodbye!'",
			"\t\telse:       'I did not understand...",
			")"
		]
	},
	{
		"name": "print",
		"is": "function",
		"description": "Prints all the values to the standard output",
		"documentation": [
			"print('Hello world!')",
			"",
			"fun print(...values: any?[], sep: str = ' ', end: str = '\n') -> void:",
			"\twrite(values.join(sep), end)"
		]
	},
	{
	  "name": "void",
	  "is": "type",
	  "description": "Matches null and empty values",
	  "documentation": [
	    "// The function must be called with an argument, but it can be a number or a void. Also must return null or do not return anything"
	    "fun test(x: num?) -> void:",
	    "\tif x:",
	    "\t\tprint(x)"
	  ]
	},
	{
	  "name": "any",
	  "is": "type",
	  "description": "Matches any type that is not void",
	  "documentation": [
	    "fun test! -> any:",
	    "\treturn math.random!    // must return anything"
	  ]
	},
	{
	  "name": "bool",
	  "is": "type",
	  "description": "Matches true or false"
	},
	{
	  "name": "bool",
	  "is": "function",
	  "description": "Converts the value into a boolean",
	  "documentation": [
	    "bool()         // false",
	    "bool(null)     // false",
	    "bool(0)        // false",
	    "bool(nanum)    // false",
	    "bool('')       // false",
	    "bool([])       // false",
	    "bool({})       // false",
	    "bool(false)    // false",
	    "bool(/* Anything else */)    // true"
	  ]
	}
]