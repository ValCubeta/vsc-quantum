{
	"keywords": [
		{
			"name": "if"
		},
		{
			"name": "else"
		},
		{
			"name": "or"
		},
		{
			"name": "switch"
		}
	],
	"types": [
		{
			"name": "void"
		},
		{
			"name": "any"
		},
		{
			"name": "bool"
		},
		{
			"name": "num"
		},
		{
			"name": "str"
		},
		{
			"name": "obj",
			"documentation": [
				"obj<",
				"\tK = str",
				"\tV = any?",
				"\tsize = range(1, obj.MAX_SIZE)",
				">"
			]
		},
		{
			"name": "arr",
			"description": "Matches an array",
			"documentation": [
				"type arr<",
				"\tI = any?",
				"\tsize = range(1, arr.MAX_SIZE)",
				">"
			]
		}
	],
	"functions": [
		{
			"name": "print",
			"description": "Prints all the values to the standard output",
			"documentation": [
				"fun print(",
				"\t\t...values: arr.AnySize",
				"\t\tsep := ' '",
				"\t\tend := '\\n'",
				"\t) -> void"
			]
		},
		{
			"name": "typeof",
			"description": "Returns a string representation of the type of the value",
			"documentation": [
				"fun typeof(value: any?) -> (",
				"\t| 'void'",
				"\t| 'boolean'",
				"\t| 'number'",
				"\t| 'string'",
				"\t| 'object'",
				"\t| 'array'",
				"\t| 'regexp'",
				"\t| 'function'",
				")"
			]
		},
		{
			"name": "eval",
			"description": "Evaluates the string as code",
			"documentation": "fun eval(string: str) -> any?"
		},
		{
			"name": "exit",
			"description": "Ends the process",
			"documentation": "fun exit(code?: num = 0)"
		},
		{
			"name": "bool",
			"description": "Converts the value into a boolean",
			"documentation": "fun bool(value: any?) -> bool"
		},
		{
			"name": "num",
			"description": "Converts the value into a number",
			"documentation": "fun num(value: any?) -> num"
		},
		{
			"name": "str",
			"description": "Converts the value into a string",
			"documentation": "fun str(value: any?, converter := ('default' | 'custom')) -> str"
		}
	]
}