{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Sunny",
  "scopeName": "source.sny",
  "patterns": [
    {
      "include": "#sunny"
    }
  ],
  "repository": {
    "sunny": {
      "patterns": [
        {
          "name": "comment.line.sny",
          "begin": "#",
          "end": "$"
        },
        {
          "name": "comment.block.sny",
          "begin": "##",
          "end": "##"
        },
        {
          "name": "string.raw.sny",
          "begin": "r(\\$*)(\"|')",
          "end": "\\2\\1"
        },
        {
          "name": "string.format.sny",
          "begin": "f(\\$*)(\"|')",
          "patterns": [
            {
              "name": "constant.other.character-class.sny constant.character.escape.sny",
              "match": "\\\\[nrte]"
            },
            {
              "name": "constant.character.escape.sny",
              "match": "\\\\u\\{([0-9a-zA-Z]{1,6})\\}",
              "captures": {
                "1": {
                  "name": "constant.numeric.sny"
                }
              }
            },
            {
              "name": "constant.character.escape.sny",
              "match": "\\\\."
            },
            {
              "contentName": "variable.sny",
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.template-expression.begin.sny"
                }
              },
              "patterns": [
                {
                  "include": "#sunny"
                }
              ],
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.template-expression.end.sny"
                }
              }
            }
          ],
          "end": "\\2\\1|(.)$|$",
          "endCaptures": {
            "1": {
              "name": "invalid.sny"
            } 
          }
        },
        {
          "name": "string.sny",
          "begin": "(\\$*)(\"|')",
          "patterns": [
            {
              "name": "constant.other.character-class.sny constant.character.escape.sny",
              "match": "\\\\[nrte]"
            },
            {
              "name": "constant.character.escape.sny",
              "match": "\\\\u\\{([0-9a-zA-Z]{1,6})\\}",
              "captures": {
                "1": {
                  "name": "constant.numeric.sny"
                }
              }
            },
            {
              "name": "constant.character.escape.sny",
              "match": "\\\\."
            }
          ],
          "end": "\\2\\1|(.)$|$",
          "endCaptures": {
            "1": {
              "name": "invalid.sny"
            } 
          }
        },
        {
          "name": "constant.numeric.sny",
          "match": "(?<![^.]\\.\\s*|\\w)(?:[0-9_]+(?:\\.[0-9_]+)?(?:[eE][-+]?[0-9_]+)?|0b[01_]+|0x[0-9a-fA-F_]+)(?!\\w)",
          "comment": "1_234.5678_9012e+3_456 | 0b1000_0001 | 0x50_50_FF"
        },
        {
          "name": "keyword.operator.rest.sny",
          "match": "\\.{3}"
        },
        {
          "name": "punctuation.accessor.sny keyword.operator.accessor.sny",
          "match": "\\.|::"
        },
        {
          "name": "keyword.operator.sny",
          "match": "\\*\\*?|[-+/|%!?~]|[=!<>]=?|<<|>>",
          "comment": "- + / * % ! | == != >= <= > < ?"
        },
        {
          "name": "keyword.operator.assignment.sny",
          "match": "(?:[-+/%^:]|[*|&]{1,2})?=",
          "comment": "+= -= /= *= %= **= ||= &&= ="
        },
        {
          "name": "keyword.operator.type.annotation.sny meta.type.annotation.sny",
          "match": ":"
        },
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "meta.brace.round.sny"
            }
          },
          "patterns": [
            {
              "include": "#main"
            }
          ],
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "meta.brace.round.sny"
            }
          }
        },
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.sny"
            }
          },
          "patterns": [
            {
              "include": "#main"
            }
          ],
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.sny"
            }
          }
        },
        {
          "match": "(@)\\s*(\\w+)",
          "captures": {
            "1": {
              "name": "keyword.operator.sny"
            },
            "2": {
              "name": "entity.name.function.decorator.sny"
            }
          }
        },
        {
          "name": "keyword.other.import.sny",
          "match": "(?<!(?:\\.|::)\\s*|\\w)(?:use|from|as)(?!\\w)"
        },
        {
          "name": "keyword.sny",
          "match": "(?<!(?:\\.|::)\\s*|\\w)(?:priv|pub|where|with|if|else|match|return|impl|loop|while|break|skip|for|in)(?!\\w)"
        },
        {
          "name": "storage.type.sny",
          "match": "(?<!(?:\\.|::)\\s*|\\w)(?:mod|typedef|var|const|let|fun|class|struct|enum)(?!\\w)"
        },
        {
          "name": "support.function.builtin.sny",
          "match": "(?<!(?<!\\.)\\.\\s*|\\w)(?:println)(?!\\w)"
        },
        {
          "name": "support.class.builtin.sny",
          "match": "(?:(?<!(?<!\\.)\\.\\s*|\\w)(?:Self|Super|bool|int|uint|float|String|Dict|Vec|Range))(?!\\w)"
        },
        {
          "name": "variable.language.sny",
          "match": "(?<!(?:\\.|::)\\s*|\\w)(?:self|_)(?!\\w)"
        },
        {
          "name": "constant.language.sny",
          "match": "(?<!(?<!\\.)\\.\\s*|::|\\w)(?:true|false)(?!\\w)"
        },
        {
          "name": "entity.name.function.sny",
          "match": "(?<!\\w)\\w+(?=\\s*(?:\\?\\.\\s*)?\\()",
          "comment": "abc()"
        }
      ]
    }
  }
}